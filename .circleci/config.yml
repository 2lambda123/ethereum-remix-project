
version: 2.1
parameters:
  run_flaky_tests:
    type: boolean
    default: false
orbs:
  browser-tools: circleci/browser-tools@1.4.1
  win: circleci/windows@5.0 # The Windows orb gives you everything you need to start using the Windows executor.
jobs:
  build:
    docker:
      - image: cimg/node:20.0.0-browsers

    resource_class:
      xlarge
    working_directory: ~/remix-project
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Build
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              NX_BIN_URL=http://127.0.0.1:8080/assets/js/soljson NX_WASM_URL=http://127.0.0.1:8080/assets/js/soljson NPM_URL=http://localhost:9090/ yarn build:production
            else
              NX_BIN_URL=http://127.0.0.1:8080/assets/js/soljson NX_WASM_URL=http://127.0.0.1:8080/assets/js/soljson NPM_URL=http://localhost:9090/ yarn build
            fi
      - run: yarn run build:e2e
      
      - run: grep -ir "[0-9]+commit" apps/* libs/* --include \*.ts --include \*.tsx --include \*.json > soljson-versions.txt
      - restore_cache:
          keys:
            - soljson-v7-{{ checksum "soljson-versions.txt" }}
      - run: yarn run downloadsolc_assets_e2e
      - save_cache:
          key: soljson-v7-{{ checksum "soljson-versions.txt" }}
          paths:
            - dist/apps/remix-ide/assets/js/soljson
      
      - run: mkdir persist && zip -0 -r persist/dist.zip dist
      - persist_to_workspace:
          root: .
          paths:
            - "persist"


  build-plugin:
      docker:
      - image: cimg/node:20.0.0-browsers
      resource_class:
        xlarge
      working_directory: ~/remix-project
      parameters:
        plugin:
          type: string
      steps:
        - checkout
        - restore_cache:
            keys:
              - v1-deps-{{ checksum "yarn.lock" }}
        - run: yarn
        - save_cache:
            key: v1-deps-{{ checksum "yarn.lock" }}
            paths:
              - node_modules
        - run: yarn nx build << parameters.plugin >> --configuration=production 
        - run: mkdir persist && zip -0 -r persist/plugin-<< parameters.plugin >>.zip dist
        - persist_to_workspace:
            root: .
            paths:
              - "persist"

  build-remixd-windows:
    executor:
      name: win/default # executor type
      size: medium # can be medium, large, xlarge, 2xlarge
      shell: bash.exe
    working_directory: ~/remix-project
    steps:
      - checkout
      - restore_cache:
          key: node-20-windows-v3
      - run: 
          command: |
            nvm install 20.0.0
            nvm use 20.0.0
            node -v
            npx -v
            npm install --global yarn http-server
            yarn -v
      - save_cache:
          key: node-20-windows-v3
          paths:
            - /ProgramData/nvm/v20.0.0

      - restore_cache:
          keys:
            - remixd-windows-deps-{{ checksum "apps/remixd-app/yarn.lock" }}
      - run: 
          command: |
              cd apps/remixd-app/
              yarn
              yarn package
              yarn selenium-install
      - save_cache:
          key: remixd-windows-deps-{{ checksum "apps/remixd-app/yarn.lock" }}
          paths:
            - apps/remixd-app/node_modules
      - persist_to_workspace:
          root: .
          paths:
            - "apps/remixd-app/out"
            
  test-remixd-ui-win:
    executor:
      name: win/default # executor type
      size: medium # can be medium, large, xlarge, 2xlarge
      shell: bash.exe
    working_directory: ~/remix-project
    steps:
      - restore_cache:
          key: node-20-windows-v3
      - run: 
          command: |
            nvm install 20.0.0
            nvm use 20.0.0
            node -v
      - checkout
      - attach_workspace:
          at: . # this is the out folder of the remixd app + remix IDE
      - run: unzip ./persist/dist.zip # this is the IDE build
      - restore_cache:
          keys:
            - remixd-windows-deps-{{ checksum "apps/remixd-app/yarn.lock" }}
      - run: 
          command: |
              cd apps/remixd-app/
              yarn selenium-start
          background: true
      - run:
          command: |
              http-server dist/apps/remix-ide
          background: true
      - run: 
          command: |
              cd apps/remixd-app/
              yarn test:browser:edge & yarn test:app:windows
      - store_test_results:
          path: ./apps/remixd-app/reports/tests
      - store_artifacts:
          path: ./apps/remixd-app/reports/screenshots

  build-remixd-ui-mac:
    macos:
      xcode: 14.2.0
    resource_class:
        macos.x86.medium.gen2
    working_directory: ~/remix-project
    steps:
      - checkout
      - restore_cache:
          keys:
            - remixd-deps-mac-{{ checksum "apps/remixd-app/yarn.lock" }}
      - run: cd apps/remixd-app && yarn
      - save_cache:
          key: remixd-deps-mac-{{ checksum "apps/remixd-app/yarn.lock" }}
          paths:
            - apps/remixd-app/node_modules
      - run: 
          command: |
            cd apps/remixd-app
            yarn package
      - persist_to_workspace:
            root: .
            paths:
              - "apps/remixd-app/out"


  test-remixd-ui-mac:
    macos:
      xcode: 14.2.0
    resource_class:
        macos.x86.medium.gen2
    working_directory: ~/remix-project
    steps:
      - checkout
      - attach_workspace:
          at: . # this is the out folder of the remixd app + remix IDE
      - restore_cache:
          keys:
            - remixd-deps-mac-{{ checksum "apps/remixd-app/yarn.lock" }}
      - run: cd apps/remixd-app && yarn && yarn selenium-install
      - save_cache:
          key: remixd-deps-mac-{{ checksum "apps/remixd-app/yarn.lock" }}
          paths:
            - apps/remixd-app/node_modules
      - run: unzip ./persist/dist.zip # this is the IDE build
      - browser-tools/install-browser-tools:
          install-firefox: false
          install-chrome: true
          install-geckodriver: false
          install-chromedriver: true
      - run:
          name: Start Selenium
          command: cd apps/remixd-app && yarn run selenium-start
          background: true
      - run:
          name: Start IDE
          command: cd dist/apps/remix-ide && npx http-server .
          background: true
      - run: 
          command: |
            cd apps/remixd-app
            yarn test:app:macos & yarn test:browser:chrome
  

  build-remixd-ui-linux:
      docker:
      - image: cimg/node:20.0.0-browsers
      resource_class:
        xlarge
      working_directory: ~/remix-project
      steps:
        - checkout
        - restore_cache:
            keys:
              - remixd-linux-deps-{{ checksum "apps/remixd-app/yarn.lock" }}
        - run: cd apps/remixd-app && yarn
        - save_cache:
            key: remixd-linux-deps-{{ checksum "apps/remixd-app/yarn.lock" }}
            paths:
              - apps/remixd-app/node_modules
        - run: sudo apt update && sudo apt install rpm dpkg fakeroot
        - run: cd apps/remixd-app && yarn package
        - persist_to_workspace:
              root: .
              paths:
                - "apps/remixd-app/out"

  test-remixd-ui-linux:
      docker:
      - image: cimg/node:20.0.0-browsers
      resource_class:
        xlarge
      working_directory: ~/remix-project
      steps:
        - checkout
        - attach_workspace:
            at: . # this is the out folder of the remixd app + remix IDE
        - restore_cache:
            keys:
              - remixd-linux-deps-{{ checksum "apps/remixd-app/yarn.lock" }}
        - run: cd apps/remixd-app && yarn && yarn selenium-install
        - save_cache:
            key: remixd-linux-deps-{{ checksum "apps/remixd-app/yarn.lock" }}
            paths:
              - apps/remixd-app/node_modules
        - run: unzip ./persist/dist.zip # this is the IDE build
        - browser-tools/install-browser-tools:
            install-firefox: false
            install-chrome: true
            install-geckodriver: false
            install-chromedriver: true
        - run:
            name: Start Selenium
            command: cd apps/remixd-app && yarn run selenium-start
            background: true
        - run:
            name: Start IDE
            command: cd dist/apps/remix-ide && npx http-server .
            background: true
        - run: 
            command: |
              cd apps/remixd-app
              yarn test:app:linux & yarn test:browser:chrome

  lint:
    docker:
      - image: cimg/node:20.0.0-browsers
    resource_class:
      xlarge
    working_directory: ~/remix-project

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - run: yarn nx graph --file=./projects.json 
      - run:
          name: Remix Libs Linting
          command: node ./apps/remix-ide/ci/lint-targets.js
  remix-libs:
    docker:
      - image: cimg/node:20.0.0-browsers
    resource_class:
      xlarge
    working_directory: ~/remix-project

    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn --version
      - run: yarn
      - run: yarn build:libs
      - run: cd dist/libs/remix-tests && yarn
      - run: cd dist/libs/remix-tests && yarn add @remix-project/remix-url-resolver ../../libs/remix-url-resolver
      - run: cd dist/libs/remix-tests && yarn add @remix-project/remix-lib ../../libs/remix-lib
      - run: cd dist/libs/remix-tests && yarn add @remix-project/remix-solidity ../../libs/remix-solidity
      - run: cd dist/libs/remix-tests && yarn add @remix-project/remix-simulator ../../libs/remix-simulator
      - run: cd dist/libs/remix-tests && ./bin/remix-tests ./../../../libs/remix-tests/tests/examples_0/assert_ok_test.sol
      - run: node dist/libs/remix-tests/bin/remix-tests ./libs/remix-tests/tests/examples_0/assert_ok_test.sol
      - run: yarn run test:libs

  remix-ide-browser:
    docker:
      - image: cimg/node:20.0.0-browsers
    resource_class:
      xlarge
    working_directory: ~/remix-project
    parameters:
      browser:
        type: string
      script:
        type: string
      job:
        type: string
      jobsize:
        type: string
    parallelism: 10
    steps:
      - when:
          condition:
              equal: [ "chrome", << parameters.browser >> ]
          steps:
            - browser-tools/install-browser-tools:
                install-firefox: false
                install-chrome: true
                install-geckodriver: false
                install-chromedriver: true
            - run: google-chrome --version
            - run: chromedriver --version
            - run: rm LICENSE.chromedriver 2> /dev/null || true
      - when:
          condition:
              equal: [ "firefox", << parameters.browser >> ]
          steps:
            - browser-tools/install-browser-tools:
                install-firefox: true
                install-chrome: false
                install-geckodriver: true
                install-chromedriver: false
            - run: firefox --version
            - run: geckodriver --version
      - checkout
      - attach_workspace:
          at: .
      - run: unzip ./persist/dist.zip
      - run: yarn install --cwd ./apps/remix-ide-e2e --modules-folder ../../node_modules

      - run: ls -la ./dist/apps/remix-ide/assets/js
      - run: yarn run selenium-install || yarn run selenium-install
      - run:
          name: Start Selenium
          command: yarn run selenium
          background: true
      - run: ./apps/remix-ide/ci/<< parameters.script >> << parameters.browser >> << parameters.jobsize >> << parameters.job >>
      - store_test_results:
          path: ./reports/tests
      - store_artifacts:
          path: ./reports/screenshots

  tests-passed:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - run: echo done

  remix-test-plugins:
    docker:
      - image: cimg/node:20.0.0-browsers
    resource_class:
      xlarge
    working_directory: ~/remix-project
    parameters:
      plugin:
        type: string
      parallelism:
        type: integer
        default: 1
    parallelism: << parameters.parallelism >>
    steps:
      - browser-tools/install-browser-tools:
          install-firefox: false
          install-chrome: true
          install-geckodriver: false
          install-chromedriver: true
      - run: google-chrome --version
      - run: chromedriver --version
      - run: rm LICENSE.chromedriver 2> /dev/null || true
      - checkout
      - attach_workspace:
          at: .
      - run: unzip ./persist/dist.zip
      - run: unzip ./persist/plugin-<< parameters.plugin >>.zip
      - run: yarn install --cwd ./apps/remix-ide-e2e --modules-folder ../../node_modules
      - run: yarn run selenium-install || yarn run selenium-install
      - run:
          name: Start Selenium
          command: yarn run selenium
          background: true
      - run: ./apps/remix-ide/ci/browser_test_plugin.sh << parameters.plugin >>
      - store_test_results:
          path: ./reports/tests
      - store_artifacts:
          path: ./reports/screenshots


  predeploy:
    docker:
      - image: cimg/node:20.0.0-browsers
    resource_class:
      xlarge
    working_directory: ~/remix-project
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run: yarn
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: yarn build:production
      - run: mkdir persist && zip -0 -r persist/predeploy.zip dist
      - persist_to_workspace:
          root: .
          paths:
            - "persist"

  deploy-build:
    docker:
      - image: cimg/node:20.0.0-browsers

    resource_class:
      xlarge
    environment:
      COMMIT_AUTHOR_EMAIL: "yann@ethereum.org"
      COMMIT_AUTHOR: "Circle CI"
    working_directory: ~/remix-project

    parameters:
      script:
        type: string

    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: unzip ./persist/predeploy.zip
      - run: ./apps/remix-ide/ci/deploy_from_travis_remix-<< parameters.script >>.sh
    
workflows:
  run_flaky_tests:
    when: << pipeline.parameters.run_flaky_tests >>
    jobs:
      - build
      - remix-ide-browser:
          requires:
            - build
          matrix:
            parameters:
              browser: ["chrome", "firefox"]
              script: ["flaky.sh"]
              job: ["nogroup"]
              jobsize: ["1"]
  build_all:
    unless: << pipeline.parameters.run_flaky_tests >>
    jobs:

      - build
      - build-plugin:
          matrix:
            parameters:
              plugin: ["plugin_api"]
      - lint:
          requires:
            - build
      - remix-libs
      - remix-test-plugins:
          name: test-plugin-<< matrix.plugin >>
          requires:
            - build
            - build-plugin
          matrix:
            alias: plugins
            parameters:
              plugin: ["plugin_api"]
              parallelism: [1, 9]
            exclude: 
              - plugin: plugin_api
                parallelism: 1
      
      - build-remixd-windows
      - build-remixd-ui-mac
      - build-remixd-ui-linux
      - test-remixd-ui-win:
          requires:
            - build
            - build-remixd-windows

      - test-remixd-ui-mac:
          requires:
            - build
            - build-remixd-ui-mac

      - test-remixd-ui-linux:
          requires:
            - build
            - build-remixd-ui-linux

      - remix-ide-browser:
          requires:
            - build
          matrix:
            parameters:
              browser: ["chrome", "firefox"]
              script: ["browser_test.sh"]
              job: ["0","1","2","3","4","5","6","7","8","9"]
              jobsize: ["10"]
      - tests-passed:
          requires:
            - lint
            - remix-libs
            - remix-ide-browser
            - plugins
            - test-remixd-ui-linux
            - test-remixd-ui-mac
            
      - predeploy:
          filters:
            branches:
              only: ['master', 'remix_live', 'remix_beta']
      - deploy-build:
          script: "live"
          name: "deploy-live"
          requires:
            - lint
            - remix-libs
            - remix-ide-browser
            - plugins
            - predeploy
          filters:
            branches:
              only: remix_live
      - deploy-build:
          script: "alpha"
          name: "deploy-alpha"
          requires:
            - lint
            - remix-libs
            - remix-ide-browser
            - plugins
            - predeploy
          filters:
            branches:
              only: master
      - deploy-build:
          script: "beta"
          name: "deploy-beta"
          requires:
            - lint
            - remix-libs
            - remix-ide-browser
            - plugins
            - predeploy
          filters:
            branches:
              only: remix_beta

# VS Code Extension Version: 1.5.1
